{"version":3,"sources":["App/form/FormComponent.jsx","App/form/FormContainer.js","App/table/TableComponent.jsx","App/table/TableContainer.js","App/search/SearchComponent.jsx","App/search/SearchCointainer.js","App/picture/PictureComponent.jsx","App/picture/PictureContainer.js","App/AppComponent.jsx","App/AppContainer.js","reportWebVitals.js","index.js"],"names":["FormComponent","props","Modal","as","Form","open","modalState","onSubmit","e","handleSubmit","onOpen","setModalState","onClose","trigger","Button","fluid","inverted","color","onClick","setIsEditing","setCurrentEmployee","defaultEmployee","Header","isEditing","Content","Grid","columns","Row","Column","computer","tablet","mobile","Message","icon","header","content","Field","required","className","Input","type","name","iconPosition","value","employee","onChange","handleInputChange","last","company","disabled","step","label","coin","labelPosition","wage","Actions","FormContainer","useState","currentEmployee","setEmployee","updateEmployee","setEmployees","employees","map","empl","id","useEffect","event","preventDefault","length","addEmployee","alert","key","target","TableComponent","wageLimit","Table","celled","striped","selectable","singleLine","HeaderCell","Body","Cell","Image","centered","circular","size","src","img","alt","pictureEmployee","textAlign","prefix","decimalScale","displayType","thousandSeparator","width","editEmployee","deleteEmployee","TableContainer","filter","SearchContainer","placeholder","SearchComponent","setQuery","PictureComponent","pictureModal","setPictureModal","imgSrc","setImgSrc","save","mirrored","audio","ref","webcamRef","screenshotFormat","capture","PictureContainer","useRef","setNewImage","useCallback","imageSrc","current","getScreenshot","height","AppComponent","Icon","Subheader","employeeList","setEmployeeList","changeCoin","search","AppContainer","process","query","setCoin","nameList","toLowerCase","includes","lastList","compList","queryList","Set","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e74573.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, Grid, Input, Message, Modal } from 'semantic-ui-react';\n\nconst FormComponent = ( props ) => {\n    return(\n        <Modal\n        as={Form}\n        open={props.modalState}\n        onSubmit={(e => props.handleSubmit(e))}\n        onOpen={() => props.setModalState(true)}\n        onClose={() => props.setModalState(false)}\n        trigger={\n            <Button \n            fluid\n            inverted\n            color='green'  \n            onClick={ () => { \n                props.setIsEditing(false) \n                props.setCurrentEmployee(props.defaultEmployee)\n            }}>\n                Add an employee\n            </Button>\n        }>\n            <Modal.Header>\n                {\n                    (props.isEditing) ? \n                    '👷‍♂️ Editing a current employee' \n                    : '🧑‍💻 Add a new employee!'\n                } \n            </Modal.Header>\n            <Modal.Content>\n                <Grid columns=\"16\">\n                    <Grid.Row>\n                        <Grid.Column computer='16' tablet='16' mobile='16'>\n                            <Message\n                            color='green'\n                            icon='picture'\n                            header='Be ready to smile!'\n                            content='You can take a picture for the employee by clicking the image on the table.'/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Form.Field required>\n                                <label className=\"pt-4\">First Name</label>\n                                <Input\n                                type='text' \n                                name='name' \n                                icon='user'\n                                iconPosition='left'\n                                value={props.employee.name} \n                                onChange={props.handleInputChange}/>\n                            </Form.Field>\n                        </Grid.Column>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Form.Field required>\n                                <label className=\"pt-4\">Last Name</label>\n                                <Input\n                                type='text' \n                                name='last' \n                                icon='users'\n                                iconPosition='left' \n                                value={props.employee.last} \n                                onChange={props.handleInputChange}/>\n                            </Form.Field>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Form.Field required>\n                                <label className=\"pt-4\" >Company</label>\n                                <Input \n                                type='text' \n                                name='company'\n                                icon='building'\n                                iconPosition='left'  \n                                value={props.employee.company} \n                                onChange={props.handleInputChange} \n                                disabled={(props.isEditing) ? true : false}/>\n                            </Form.Field>\n                        </Grid.Column>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Form.Field \n                            className='pb-4' \n                            required>\n                                <label className=\"pt-4\">Wage</label>\n                                <Input \n                                step='any'\n                                name='wage' \n                                type='number'\n                                label={props.coin}\n                                iconPosition='left'\n                                labelPosition='right' \n                                icon='money bill alternate'\n                                value={props.employee.wage} \n                                onChange={props.handleInputChange}/>\n                            </Form.Field>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button\n                inverted\n                color='green'  \n                onClick={() => props.setModalState(false)}>\n                    Close\n                </Button>\n                <Button \n                inverted\n                color='green' \n                type='submit'>\n                    {(props.isEditing) ? 'Update' : 'Add'} \n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default FormComponent;","import FormComponent from './FormComponent';\nimport { React, useState, useEffect } from 'react';\n\nconst FormContainer = ( props ) => {\n\n    const [employee, setEmployee] = useState(props.currentEmployee);\n    \n    const addEmployee = ( employee ) => {\n        employee.id = props.employees.length;\n        props.setEmployees([...props.employees, employee]);\n    }\n\n    const handleInputChange = (event) => {\n        const key = event.target.name;\n        const value = event.target.value;\n        setEmployee({...employee, [key]:value});\n    }\n\n    const updateEmployee = ( employee ) => {\n        props.setEmployees( props.employees.map(\n            (empl) => (empl.id === employee.id ? employee : empl)\n        ));\n        props.setIsEditing(false);\n        props.setModalState(false);\n        props.setCurrentEmployee(props.defaultEmployee);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (props.isEditing) {\n            updateEmployee(employee);    \n        } else {\n            if (\n                employee.name !== '' && \n                employee.last !== '' && \n                employee.company !== '' && \n                employee.wage > 0 && employee.wage !== null) {\n                    addEmployee(employee);\n                    setEmployee(props.currentEmployee);\n                    props.setModalState(false);\n            } else {\n                alert('All fields are required, and wages must be greater than 0!');\n            }\n        }\n    }\n\n    useEffect(() => {\n        setEmployee(props.currentEmployee);\n    }, [props]);\n\n    return (\n        <FormComponent \n        coin={props.coin}\n        employee={employee}\n        isEditing={props.isEditing}\n        handleSubmit={handleSubmit}\n        modalState={props.modalState}\n        updateEmployee={updateEmployee}\n        setIsEditing={props.setIsEditing}\n        setModalState={props.setModalState}\n        handleInputChange={handleInputChange}\n        defaultEmployee={props.defaultEmployee}\n        setCurrentEmployee={props.setCurrentEmployee}/>\n    );\n}\n\nexport default FormContainer;","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { Button, Grid, Image, Table } from 'semantic-ui-react';\n\nconst TableComponent = ( props ) => {\n\n    let wageLimit = (props.coin === 'MXN') ? 10000 : 465.11627907;\n\n    return(\n        <Table celled striped selectable singleLine>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Photo</Table.HeaderCell>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Company</Table.HeaderCell>\n                    <Table.HeaderCell>Wage</Table.HeaderCell>\n                    <Table.HeaderCell/>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                { props.employees.length > 0 ? (\n                    props.employees.map((empl) => (\n                        <Table.Row key={empl.id}>\n                            <Table.Cell>\n                                <Image \n                                centered\n                                circular\n                                size='tiny' \n                                src={empl.img} \n                                className='cursor-pointer-i'\n                                alt={empl.name + ' ' + empl.last}\n                                onClick={() => { props.pictureEmployee(empl) }}/>\n                            </Table.Cell>\n                            <Table.Cell>{empl.name + ' ' +  empl.last}</Table.Cell>\n                            <Table.Cell>{empl.company}</Table.Cell>\n                            <Table.Cell textAlign='right'>\n                                <NumberFormat \n                                prefix={'$'}\n                                decimalScale={2}\n                                value={empl.wage} \n                                displayType='text' \n                                thousandSeparator={true}\n                                className={(empl.wage >= wageLimit) ? ('text-green-500 font-mono') : ('text-red-500 font-mono')}/>\n                            </Table.Cell>\n                            <Table.Cell width='4'>\n                                <Grid>\n                                    <Grid.Row>\n                                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                                            <Button \n                                            inverted\n                                            color='green' \n                                            className='ml-4-i'\n                                            onClick={() => { props.editEmployee(empl) }}>\n                                                Edit\n                                            </Button>\n                                        </Grid.Column>\n                                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                                            <Button \n                                            inverted\n                                            color='green'  \n                                            onClick={() => { props.deleteEmployee(empl.id) }}>\n                                                Delete\n                                            </Button>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Table.Cell>\n                        </Table.Row>\n                    ))\n                ) : (\n                  <Table.Row></Table.Row>\n                )}\n            </Table.Body>\n        </Table>\n    )\n}\n\nexport default TableComponent;","import React from 'react';\nimport TableComponent from './TableComponent';\n\nconst TableContainer = ( props ) => {\n\n    const deleteEmployee = ( id ) => {\n        props.setEmployees(props.employees.filter(\n            (empl) => empl.id !== id\n        ));\n    }\n\n    return(\n        <TableComponent \n        coin={props.coin}\n        employees={props.employees}\n        deleteEmployee={deleteEmployee}\n        editEmployee={props.editEmployee}\n        pictureEmployee={props.pictureEmployee}/>\n    );\n}\n\nexport default TableContainer;","import React from 'react';\nimport { Input } from 'semantic-ui-react';\n\nconst SearchContainer = ( props ) => {\n    return(\n        <div>\n            <Input \n            fluid\n            icon='search' \n            onChange={props.handleInputChange}\n            placeholder='Search by name or by company...'/>\n        </div>\n    );\n}\n\nexport default SearchContainer;","import { React } from 'react';\nimport SearchComponent from './SearchComponent';\n\nconst SearchContainer = ( props ) => {\n\n    const handleInputChange = (event) => {\n        props.setQuery(event.target.value);\n    }\n\n    return(\n        <SearchComponent handleInputChange={handleInputChange}/>\n    );\n}\n\nexport default SearchContainer;","import React from 'react';\nimport Webcam from 'react-webcam';\nimport { Button, Grid, Image, Modal } from 'semantic-ui-react';\n\nconst PictureComponent = ( props ) => {\n    return(\n        <Modal\n        open={props.pictureModal}\n        onOpen={() => {props.setPictureModal(true)}}\n        onClose={() => {props.setPictureModal(false)}}>\n            <Modal.Header>\n                📸 Upload a picture of the employee  \n            </Modal.Header>\n            <Modal.Content>\n                    { props.imgSrc ? (\n                        <Grid columns='16'>\n                            <Grid.Row>\n                                <Grid.Column computer='16' tablet='16' mobile='16'>\n                                    <Image \n                                    circular\n                                    centered\n                                    size=\"medium\"\n                                    src={props.imgSrc}\n                                    alt=\"This is a picture of you!\"\n                                    className='place-self-center py-5'/>\n                                </Grid.Column>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                                <Grid.Column computer='5' tablet='5' mobile='7'>\n                                    <Button \n                                    fluid\n                                    inverted\n                                    color='green'  \n                                    onClick={() => { props.setImgSrc(null) }}>\n                                        Delete\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column computer='5' tablet='5' mobile='7'>\n                                    <Button\n                                    fluid \n                                    inverted\n                                    color='green'  \n                                    onClick={() =>{ \n                                        props.save();\n                                        props.setPictureModal(false);\n                                        props.setImgSrc(null);\n                                    }}>\n                                        Save\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                            </Grid.Row>\n                        </Grid>\n                    ) : (\n                        <Grid columns='16'>\n                            <Grid.Row>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                                <Grid.Column computer='10' tablet='10' mobile='14'>\n                                    <Webcam \n                                    mirrored\n                                    audio={false}\n                                    className='py-5'\n                                    ref={props.webcamRef}\n                                    screenshotFormat='image/jpeg'/>\n                                </Grid.Column>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                                <Grid.Column computer='5' tablet='5' mobile='7'>\n                                    <Button \n                                    fluid\n                                    inverted\n                                    color='green' \n                                    onClick={() => { props.setPictureModal(false) }}>\n                                        Close\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column computer='5' tablet='5' mobile='7'>\n                                    <Button \n                                    fluid\n                                    inverted\n                                    color='green'\n                                    onClick={() => { props.capture() }}>\n                                        Capture\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column computer='3' tablet='3' mobile='1'/>\n                            </Grid.Row>\n                        </Grid>\n                    )}\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default PictureComponent;","import PictureComponent from './PictureComponent';\nimport {React, useRef, useState, useEffect, useCallback} from 'react';\n\nconst PictureContainer = ( props ) => {\n\n    const webcamRef = useRef(null);\n    const [imgSrc, setImgSrc] = useState(null);\n    const [employee, setEmployee] = useState(props.currentEmployee);    \n\n    const save = () => {\n        props.setEmployees( props.employees.map(\n            (empl) => ((empl.id === employee.id) ? \n                (setNewImage(empl, imgSrc)) : (empl)\n            )\n        ));\n    }\n\n    const setNewImage = (empl, img) => {\n        empl.img = img;\n        return empl;\n    }\n\n    useEffect(() => {\n        setEmployee(props.currentEmployee);\n    }, [props]);\n\n    const capture = useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot({\n            width: 512, \n            height: 512\n        });\n        setImgSrc(imageSrc);\n      }, [webcamRef, setImgSrc]\n    );\n\n    return(\n        <PictureComponent\n        setPictureModal={props.setPictureModal}\n        pictureModal={props.pictureModal}\n        setImgSrc={setImgSrc}\n        webcamRef={webcamRef}\n        imgSrc={imgSrc}\n        capture={capture}\n        save={save}\n        />\n    );\n}\n\nexport default PictureContainer;","import React from 'react';\nimport FormConrtainer from './form/FormContainer';\nimport TableContainer from './table/TableContainer';\nimport SearchContainer from './search/SearchCointainer';\nimport PictureContainer from './picture/PictureContainer';\nimport { Button, Header, Icon, Grid } from 'semantic-ui-react';\n\nconst AppComponent = ( props ) => {\n    return (\n        <Grid columns='16'>\n            <Grid.Column computer='2' tablet='1' mobile='1'/>\n            <Grid.Column computer='12' tablet='16' mobile='16'>\n                <Grid.Row className='py-5'>\n                    <Header textAlign='center' as='h2' icon>\n                        <Icon name='address book' />\n                            Employist\n                        <Header.Subheader>\n                            Manage your employees in a easy way!\n                        </Header.Subheader>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid columns='12'>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Header textAlign='center' as='h3'>\n                                <Icon name=\"users\"/>\n                                You currently have {props.employeeList.length} employees.\n                            </Header>\n                            <FormConrtainer \n                            coin={props.coin}\n                            isEditing={props.isEditing}\n                            modalState={props.modalState} \n                            employees={props.employeeList} \n                            setIsEditing={props.setIsEditing}\n                            setModalState={props.setModalState}\n                            setEmployees={props.setEmployeeList}\n                            currentEmployee={props.currentEmployee}\n                            defaultEmployee={props.defaultEmployee}\n                            setCurrentEmployee={props.setCurrentEmployee}/>\n                        </Grid.Column>\n                        <Grid.Column computer='8' tablet='8' mobile='16'>\n                            <Header textAlign='center' as='h3'>\n                                <Icon name=\"money\"/>\n                                Wages are on {props.coin}.\n                            </Header>\n                            <Button\n                            fluid \n                            inverted\n                            color='green' \n                            onClick={() => { props.changeCoin() }}>\n                                Change currency\n                            </Button>\n                        </Grid.Column>\n                    </Grid>\n                </Grid.Row>\n                <Grid.Row className='py-4'>\n                    <SearchContainer setQuery={props.setQuery}/>\n                </Grid.Row>\n                <Grid.Row className='py-2'>\n                    <TableContainer\n                    coin={props.coin}\n                    employees={props.search()}\n                    editEmployee={props.editEmployee}\n                    setEmployees={props.setEmployeeList}\n                    pictureEmployee={props.pictureEmployee}/>\n                </Grid.Row>\n                <Grid.Row>\n                    <PictureContainer\n                    setEmployees={props.setEmployeeList}\n                    employees={props.employeeList}\n                    pictureModal={props.pictureModal}\n                    setPictureModal={props.setPictureModal}\n                    currentEmployee={props.currentEmployee}\n                    />\n                </Grid.Row>\n            </Grid.Column>\n            <Grid.Column computer='2' tablet='1' mobile='1'/>\n        </Grid>\n    );\n}\n\nexport default AppComponent;\n","import { React, useState } from 'react';\nimport AppComponent from './AppComponent';\n\nconst AppContainer = () => {\n\n    /* Default values */\n    const tempEmploy  = [\n        { id: 0, name: 'Wallace', last: 'Wells', company: 'Pilgrim Corp.', img: process.env.PUBLIC_URL + '/img/default.png', wage: 15090 },\n        { id: 1, name: 'Stephen', last: 'Stills', company: 'Pilgrim Corp.', img: process.env.PUBLIC_URL + '/img/default.png', wage: 5998 },\n        { id: 2, name: 'Gideon', last: 'Graves', company: 'GGG Record Label', img: process.env.PUBLIC_URL + '/img/default.png', wage: 25250 },\n    ];\n    const defaultEmployee = { id: 0, name: '', last: '', company: '', img: process.env.PUBLIC_URL + '/img/default.png', wage: 0 };\n\n    /* States */\n    const [query, setQuery] = useState('');\n    const [coin, setCoin] = useState('MXN');\n    const [isEditing, setIsEditing] = useState(false);\n    const [modalState, setModalState] = useState(false);\n    const [pictureModal, setPictureModal] = useState(false);\n    const [employeeList, setEmployeeList] = useState(tempEmploy);\n    const [currentEmployee, setCurrentEmployee] = useState(defaultEmployee);\n\n    /* Functions */\n    const search = () => {\n        const nameList = employeeList.filter(empl => empl.name.toLowerCase().includes(query.toLowerCase()));\n        const lastList = employeeList.filter(empl => empl.last.toLowerCase().includes(query.toLowerCase()));\n        const compList = employeeList.filter(empl => empl.company.toLowerCase().includes(query.toLowerCase()));\n        const queryList = [...nameList, ...lastList, ...compList];\n        return [...new Set(queryList)] ;\n    }\n\n    const changeCoin = () => {\n        if (coin === 'MXN') {\n          setCoin('USD');\n        employeeList.forEach(empl => {\n                empl.wage = empl.wage / 21.50;\n        });\n        } else {\n            setCoin('MXN');\n            employeeList.forEach(empl => {\n                empl.wage = empl.wage * 21.50;\n            });\n        }\n    }\n\n    const editEmployee = (empl) => {\n        setIsEditing(true);\n        setModalState(true);\n        setCurrentEmployee({\n            id: empl.id, \n            name: empl.name, \n            last: empl.last, \n            company: empl.company, \n            img: empl.img, \n            wage: empl.wage\n        });\n    }\n\n    const pictureEmployee = (empl) => {\n        setPictureModal(true);\n        setCurrentEmployee({\n            id: empl.id, \n            name: empl.name, \n            last: empl.last, \n            company: empl.company, \n            img: empl.img, \n            wage: empl.wage\n        });\n    }\n\n    return(\n        <AppComponent\n        coin={coin}\n        query={query}\n        search={search}\n        setCoin={setCoin}\n        setQuery={setQuery}\n        isEditing={isEditing}\n        changeCoin={changeCoin}\n        modalState={modalState}\n        editEmployee={editEmployee}\n        employeeList={employeeList}\n        setIsEditing={setIsEditing}\n        pictureModal={pictureModal}\n        setModalState={setModalState}\n        defaultEmployee={defaultEmployee}\n        setEmployeeList={setEmployeeList}\n        currentEmployee={currentEmployee}\n        setPictureModal={setPictureModal}\n        pictureEmployee={pictureEmployee}\n        setCurrentEmployee={setCurrentEmployee}/>\n    );\n\n}\n\nexport default AppContainer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.output.css';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport AppContainer from './App/AppContainer';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}